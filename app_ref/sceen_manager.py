from direct.showbase.ShowBase import ShowBase

from app_ref.Sceen1.Scene import Scene1 as FirstScene
from app_ref.Sceen2.Scene import Scene2 as SecondScene
from app_ref.Sceen3.Scene import Scene3 as ThirdScene


class ScreenManager(ShowBase):
    def __init__(self):
        super().__init__()
        self.screens = {}
        self.current_screen = None

        # –î–æ–±–∞–≤–ª—è–µ–º —ç–∫—Ä–∞–Ω—ã (—Å –Ω–æ–º–µ—Ä–∞–º–∏)
        self.add_screens([
            (1, FirstScene("Scene1", self, self.switch_screen)),
            (2, SecondScene("Scene2", self, self.switch_screen)),
            (3, ThirdScene("Scene3", self, self.switch_screen)),
        ])

        # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –≤—Å–µ —Å—Ü–µ–Ω—ã (—Å–∫—Ä—ã–≤–∞–µ–º –∏—Ö)
        for screen in self.screens.values():
            screen.setup()

        # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø–µ—Ä–≤—ã–π —ç–∫—Ä–∞–Ω
        self.switch_screen(1)

    def add_screens(self, screens):
        """–î–æ–±–∞–≤–ª—è–µ—Ç —Å–ø–∏—Å–æ–∫ —ç–∫—Ä–∞–Ω–æ–≤ —Å –Ω–æ–º–µ—Ä–∞–º–∏"""
        for number, screen in screens:
            self.screens[number] = screen

    def switch_screen(self, screen_number):
        """–ü–µ—Ä–µ–∫–ª—é—á–∞–µ—Ç —Å—Ü–µ–Ω—É"""
        if self.current_screen:
            print(f"‚ö´ –ü—Ä—è—á–µ–º {self.current_screen.node.getName()}")
            self.current_screen.hide()

        self.current_screen = self.screens.get(screen_number)

        if self.current_screen:
            print(f"üîµ –ü–æ–∫–∞–∑—ã–≤–∞–µ–º {self.current_screen.node.getName()}")
            self.current_screen.show()

